{"version":3,"sources":["index.js"],"names":["debug","DEFAULT_BASE_HOST","DEFAULT_CATEGORY","DEFAULT_CATEGORY_DETAILS_INDEX","DEFAULT_NO_CACHE","DEFAULT_PATH","DEFAULT_QUERYSTRING","DEFAULT_REQUEST_OPTIONS","hostname","path","secure","HEADER_CACHE_CONTROL","HEADER_PRAGMA","PROTOCOL_INSECURE","PROTOCOL_SECURE","QUERY_KEYS","QUERY_PARAM_BUNDLE_DUPLICATES","QUERY_PARAM_HAS_IMAGE","QUERY_PARAM_MAX","QUERY_PARAM_MIN","QUERY_PARAM_OFFSET","QUERY_PARAM_POSTAL","QUERY_PARAM_POSTED_TODAY","QUERY_PARAM_QUERY","QUERY_PARAM_SEARCH_DISTANCE","QUERY_PARAM_SEARCH_NEARBY","QUERY_PARAM_SEARCH_TITLES_ONLY","RE_HTML","RE_TAGS_MAP","_getPostingDetails","postingUrl","markup","$","cheerio","load","attributes","details","description","text","trim","mapUrl","find","attr","pid","substring","search","replace","replyUrl","title","url","each","i","element","infoType","test","split","postedAt","Date","updatedAt","images","push","last","children","is","attribute","length","_getPostings","options","posting","postings","filter","term","map","detailsUrl","parse","protocol","category","coordinates","lat","lon","date","hasPic","location","price","format","_getReplyDetails","next","li","contactName","parent","value","phoneNumber","indexOf","email","_getRequestOptions","client","query","requestOptions","JSON","core","Validation","coalesce","city","baseHost","join","forEach","key","isEmpty","encodeURIComponent","bundleDuplicates","hasImage","minAsk","minPrice","maxAsk","maxPrice","postal","postedToday","searchDistance","searchNearby","searchTitlesOnly","offset","nocache","headers","Client","request","Request","callback","exec","getDetails","self","resolve","reject","Error","get","then","catch","promiseOrCallback","undefined"],"mappings":"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","sourcesContent":["import cheerio from 'cheerio';\nimport core from './core.js';\nimport debugLog from 'debug';\nimport { Request } from 'reqlib';\nimport url from 'url';\n\nconst\n\tdebug = debugLog('craigslist'),\n\tDEFAULT_BASE_HOST = 'craigslist.org',\n\tDEFAULT_CATEGORY = 'sss',\n\tDEFAULT_CATEGORY_DETAILS_INDEX = 1,\n\tDEFAULT_NO_CACHE = 'no-cache',\n\tDEFAULT_PATH = '/search/',\n\tDEFAULT_QUERYSTRING = '?sort=rel',\n\tDEFAULT_REQUEST_OPTIONS = {\n\t\thostname : '',\n\t\tpath : '',\n\t\tsecure : true\n\t},\n\tHEADER_CACHE_CONTROL = 'Cache-Control',\n\tHEADER_PRAGMA = 'Pragma',\n\tPROTOCOL_INSECURE = 'http:',\n\tPROTOCOL_SECURE = 'https:',\n\tQUERY_KEYS = [\n\t\t'bundleDuplicates',\n\t\t'category',\n\t\t'hasImage',\n\t\t'hasPic',\n\t\t'max_price',\n\t\t'min_price',\n\t\t'offset',\n\t\t'postal',\n\t\t'postedToday',\n\t\t'query',\n\t\t'searchDistance',\n\t\t'searchNearby',\n\t\t'searchTitlesOnly',\n\t\t'srcType'\n\t],\n\tQUERY_PARAM_BUNDLE_DUPLICATES = '&bundleDuplicates=1',\n\tQUERY_PARAM_HAS_IMAGE = '&hasPic=1',\n\tQUERY_PARAM_MAX = '&max_price=',\n\tQUERY_PARAM_MIN = '&min_price=',\n\tQUERY_PARAM_OFFSET = '&s=',\n\tQUERY_PARAM_POSTAL = '&postal=',\n\tQUERY_PARAM_POSTED_TODAY = '&postedToday=1',\n\tQUERY_PARAM_QUERY = '&query=',\n\tQUERY_PARAM_SEARCH_DISTANCE = '&search_distance=',\n\tQUERY_PARAM_SEARCH_NEARBY = '&searchNearby=1',\n\tQUERY_PARAM_SEARCH_TITLES_ONLY = '&srchType=T',\n\tRE_HTML = /\\.htm(l)?/i,\n\tRE_TAGS_MAP = /map/i;\n\n/**\n * Accepts strong of HTML and parses that string to find key details.\n *\n * @param {string} postingUrl - URL that details were loaded from\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {object} details - The processed details from the Craigslist posting\n **/\nfunction _getPostingDetails (postingUrl, markup) {\n\tlet\n\t\t$ = cheerio.load(markup),\n\t\tattributes = {},\n\t\tdetails = {};\n\n\tdetails.description = ($('#postingbody').text() || '').trim();\n\tdetails.mapUrl = $('div.mapbox p.mapaddress')\n\t\t.find('a')\n\t\t.attr('href');\n\tdetails.pid = postingUrl\n\t\t.substring(postingUrl.search(/[0-9]*\\.html/))\n\t\t.replace(/\\.html/, '');\n\tdetails.replyUrl = ($('#replylink').attr('href') || '').trim();\n\tdetails.title = ($('#titletextonly').text() || '').trim();\n\tdetails.url = postingUrl;\n\n\t// populate posting info\n\t$('div.postinginfos').find('.postinginfo').each((i, element) => {\n\t\tlet infoType = $(element).text();\n\n\t\t// set pid (a backup to ripping it from the URL)\n\t\tif (/post\\sid/i.test(infoType)) {\n\t\t\tdetails.pid = (infoType.split(/\\:/)[1] || '').trim();\n\t\t\treturn;\n\t\t}\n\n\t\t// set postedAt\n\t\tif (/posted/i.test(infoType) && $(element).find('time').attr('datetime')) {\n\t\t\tdetails.postedAt = new Date($(element).find('time').attr('datetime'));\n\t\t\treturn;\n\t\t}\n\n\t\t// set updatedAt\n\t\tif (/updated/i.test(infoType) && $(element).find('time').attr('datetime')) {\n\t\t\tdetails.updatedAt = new Date($(element).find('time').attr('datetime'));\n\t\t\treturn;\n\t\t}\n\t});\n\n\t// populate posting photos\n\t$('#thumbs').find('a').each((i, element) => {\n\t\tdetails.images = details.images || [];\n\t\tdetails.images.push(($(element).attr('href') || '').trim());\n\t});\n\n\t// grab attributes if they exist\n\t$('div.mapAndAttrs')\n\t\t.find('p.attrgroup')\n\t\t.last()\n\t\t.children()\n\t\t.each((i, element) => {\n\t\t\tif ($(element).is('span')) {\n\t\t\t\tlet attribute = $(element).text().split(/:\\s/);\n\t\t\t\tattributes[attribute[0].replace(/\\s/g, '_')] = attribute[1];\n\t\t\t}\n\t\t});\n\n\t// populate attributes\n\tif (attributes && Object.keys(attributes).length) {\n\t\tdetails.attributes = attributes;\n\t}\n\n\treturn details;\n}\n\n/**\n * Accepts string of HTML and parses that string to find all pertinent postings.\n *\n * @param {object} options - Request options used for the request to craigslist\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {Array} postings - The processed and normalized array of postings\n **/\nfunction _getPostings (options, markup) {\n\tlet\n\t\t$ = cheerio.load(markup),\n\t\t// hostname = options.hostname,\n\t\tposting = {},\n\t\tpostings = [],\n\t\tsecure = options.secure;\n\n\t$('div.content')\n\t\t.find('.result-row')\n\t\t.each((i, element) => {\n\t\t\tlet\n\t\t\t\t// introducing fix for #11 - Craigslist markup changed\n\t\t\t\tdetails = $(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.attr('href')\n\t\t\t\t\t.split(/\\//g)\n\t\t\t\t\t.filter((term) => term.length)\n\t\t\t\t\t.map((term) => term.split(RE_HTML)[0]),\n\t\t\t\t// fix for #6 and #24\n\t\t\t\tdetailsUrl = url.parse($(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.attr('href'));\n\n\t\t\t// ensure hostname and protocol are properly set\n\t\t\tdetailsUrl.hostname = detailsUrl.hostname || options.hostname;\n\t\t\tdetailsUrl.protocol = secure ? PROTOCOL_SECURE : PROTOCOL_INSECURE;\n\n\t\t\tposting = {\n\t\t\t\tcategory : details[DEFAULT_CATEGORY_DETAILS_INDEX],\n\t\t\t\tcoordinates : {\n\t\t\t\t\tlat : $(element).attr('data-latitude'),\n\t\t\t\t\tlon : $(element).attr('data-longitude')\n\t\t\t\t},\n\t\t\t\tdate : ($(element)\n\t\t\t\t\t.find('time')\n\t\t\t\t\t.attr('datetime') || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\thasPic : RE_TAGS_MAP\n\t\t\t\t\t.test($(element)\n\t\t\t\t\t\t.find('.result-tags')\n\t\t\t\t\t\t.text() || ''),\n\t\t\t\tlocation : ($(element)\n\t\t\t\t\t.find('.result-hood')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t.trim(),\n\t\t\t\tpid : ($(element)\n\t\t\t\t\t.attr('data-pid') || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\tprice : ($(element)\n\t\t\t\t\t.find('.result-meta .result-price')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t\t.replace(/^\\&\\#x0024\\;/g, '')\n\t\t\t\t\t\t.trim(), // sanitize\n\t\t\t\ttitle : ($(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\turl : detailsUrl.format()\n\t\t\t};\n\n\t\t\t// make sure lat / lon is valid\n\t\t\tif (typeof posting.coordinates.lat === 'undefined' ||\n\t\t\t\ttypeof posting.coordinates.lon === 'undefined') {\n\t\t\t\tdelete posting.coordinates;\n\t\t\t}\n\n\t\t\tpostings.push(posting);\n\t\t});\n\n\treturn postings;\n}\n\n/**\n * Accepts strong of HTML and parses that string to find key details.\n *\n * @param {object} details - a posting object to populate\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {null} - Returns empty\n **/\nfunction _getReplyDetails (details, markup) {\n\tlet $ = cheerio.load(markup);\n\n\t$('div.reply_options').find('b').each((i, element) => {\n\t\tlet infoType = $(element).text().trim();\n\n\t\t// set contact name\n\t\tif (/contact\\sname/i.test(infoType)) {\n\t\t\t$(element).next().find('li').each((i, li) => {\n\t\t\t\tdetails.contactName = $(li).text().trim();\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// set phone number and email\n\t\tif (/call/i.test(infoType)) {\n\t\t\t$(element).parent().find('li').each((i, li) => {\n\t\t\t\tlet value = $(li).text().trim();\n\n\t\t\t\t// check for phone value (based on the emoji)\n\t\t\t\tif (/\\u260E/.test(value)) {\n\t\t\t\t\tdetails.phoneNumber = value.substring(value.indexOf('('));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// check for email value (based on the @ symbol)\n\t\t\t\tif (/\\@/.test(value)) {\n\t\t\t\t\tdetails.email = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\t});\n}\n\n/**\n * Accepts options, iterates through the known acceptable keys from defaultOptions\n * and if found in input options, uses that. If not found in input options to method,\n * falls back to the options specified when the module was initialized. If not found\n * in initialization options, uses the default options setting. All keys provided in\n * the input options variable are retained.\n *\n * @param {Client} client - the client instance wrapping the Craigslist request\n * @param {object} options - Input options for the web request\n * @param {string} query - A querystring\n * @returns {object} options - The coalesced result of options\n **/\nfunction _getRequestOptions (client, options, query) {\n\tlet requestOptions = JSON.parse(JSON.stringify(DEFAULT_REQUEST_OPTIONS));\n\n\t// ensure default options are set, even if omitted from input options\n\trequestOptions.hostname = [\n\t\tcore.Validation.coalesce(options.city, client.options.city, ''),\n\t\t// introducing fix for #7\n\t\tcore.Validation.coalesce(\n\t\t\toptions.baseHost,\n\t\t\tclient.options.baseHost,\n\t\t\tDEFAULT_BASE_HOST)\n\t].join('.');\n\n\t// preserve any extraneous input option keys (may have addition instructions for underlying request object)\n\tObject\n\t\t.keys(options)\n\t\t.forEach((key) => {\n\t\t\tif (!QUERY_KEYS.indexOf(key) &&\n\t\t\t\tcore.Validation.isEmpty(requestOptions[key]) &&\n\t\t\t\tcore.Validation.isEmpty(DEFAULT_REQUEST_OPTIONS[key])) {\n\t\t\t\trequestOptions[key] = options[key];\n\t\t\t}\n\t\t});\n\n\t// setup path\n\tif (core.Validation.isEmpty(requestOptions.path)) {\n\t\trequestOptions.path = DEFAULT_PATH;\n\t}\n\n\t// setup category\n\trequestOptions.path = [\n\t\trequestOptions.path,\n\t\tcore.Validation.coalesce(options.category, DEFAULT_CATEGORY)].join('');\n\n\t// setup querystring\n\trequestOptions.path = [requestOptions.path, DEFAULT_QUERYSTRING].join('');\n\n\t// add search query (if specified)\n\tif (!core.Validation.isEmpty(query)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_QUERY,\n\t\t\tencodeURIComponent(query)].join('');\n\t}\n\n\t// add bundleDuplicates (if specified)\n\tif (options.bundleDuplicates) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_BUNDLE_DUPLICATES].join('');\n\t}\n\n\t// add hasPic (if specified)\n\tif (options.hasImage || options.hasPic) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_HAS_IMAGE].join('');\n\t}\n\n\t// add min asking price (if specified) (deprecated)\n\tif (!core.Validation.isEmpty(options.minAsk)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MIN,\n\t\t\toptions.minAsk].join('');\n\t}\n\n\t// add min price (if specified)\n\tif (!core.Validation.isEmpty(options.minPrice)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MIN,\n\t\t\toptions.minPrice].join('');\n\t}\n\n\t// add max asking price (if specified) (deprecated)\n\tif (!core.Validation.isEmpty(options.maxAsk)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MAX,\n\t\t\toptions.maxAsk].join('');\n\t}\n\n\t// add max price (if specified)\n\tif (!core.Validation.isEmpty(options.maxPrice)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MAX,\n\t\t\toptions.maxPrice].join('');\n\t}\n\n\t// add postal (if specified)\n\tif (!core.Validation.isEmpty(options.postal)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_POSTAL,\n\t\t\toptions.postal].join('');\n\t}\n\n\t// add postedToday (if specified)\n\tif (options.postedToday) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_POSTED_TODAY].join('');\n\t}\n\n\t// add searchDistance (if specified)\n\tif (!core.Validation.isEmpty(options.searchDistance)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_DISTANCE,\n\t\t\toptions.searchDistance].join('');\n\t}\n\n\t// add searchNearby (if specified)\n\tif (options.searchNearby) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_NEARBY].join('');\n\t}\n\n\t// add searchTitlesOnly (if specified)\n\tif (options.searchTitlesOnly) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_TITLES_ONLY].join('');\n\t}\n\n\t// add offset (if specified)\n\tif (options.offset) {\n\t\trequestOptions.path = [requestOptions.path, QUERY_PARAM_OFFSET, options.offset].join('');\n\t}\n\n\t// add cache control headers (if nocache is specified)\n\tif (options.nocache) {\n\t\t// ensure we have headers...\n\t\trequestOptions.headers = requestOptions.headers || {};\n\n\t\t// add headers to attempt to override cache controls\n\t\trequestOptions.headers[HEADER_CACHE_CONTROL] = DEFAULT_NO_CACHE;\n\t\trequestOptions.headers[HEADER_PRAGMA] = DEFAULT_NO_CACHE;\n\t}\n\n\tdebug('setting request options: %o', requestOptions);\n\n\treturn requestOptions;\n}\n\nexport class Client {\n\tconstructor (options) {\n\t\tthis.options = options || {};\n\t\tthis.request = new Request(this.options);\n\t}\n\n\tdetails (posting, callback) {\n\t\tlet\n\t\t\texec,\n\t\t\tgetDetails,\n\t\t\tpostingUrl,\n\t\t\trequestOptions,\n\t\t\tself = this;\n\n\t\t// retrieves the posting details directly\n\t\tgetDetails = new Promise((resolve, reject) => {\n\t\t\tif (core.Validation.isEmpty(posting)) {\n\t\t\t\treturn reject(new Error('posting URL is required'));\n\t\t\t}\n\n\t\t\tif (typeof posting !== 'string' && core.Validation.isEmpty(posting.url)) {\n\t\t\t\treturn reject(new Error('posting URL is required'));\n\t\t\t}\n\n\t\t\tpostingUrl = typeof posting === 'string' ? posting : posting.url;\n\t\t\trequestOptions = url.parse(postingUrl);\n\t\t\trequestOptions.secure = /https/i.test(requestOptions.protocol);\n\n\t\t\tdebug('request options set to: %o', requestOptions);\n\n\t\t\treturn self.request\n\t\t\t\t.get(requestOptions)\n\t\t\t\t.then((markup) => {\n\t\t\t\t\tdebug('retrieved posting %o', posting);\n\t\t\t\t\tlet details = _getPostingDetails(postingUrl, markup);\n\n\t\t\t\t\treturn resolve(details);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\texec = new Promise((resolve, reject) => {\n\t\t\treturn getDetails\n\t\t\t\t.then((details) => {\n\t\t\t\t\tif (!details.replyUrl) {\n\t\t\t\t\t\treturn resolve(details);\n\t\t\t\t\t}\n\n\t\t\t\t\tdetails.replyUrl = url.parse(details.replyUrl);\n\n\t\t\t\t\tif (!details.replyUrl.hostname) {\n\t\t\t\t\t\tdetails.replyUrl.hostname = requestOptions.hostname;\n\t\t\t\t\t\tdetails.replyUrl.protocol = requestOptions.secure ? PROTOCOL_SECURE : PROTOCOL_INSECURE;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn self.request\n\t\t\t\t\t\t.get(details.replyUrl)\n\t\t\t\t\t\t.then((markup) => {\n\t\t\t\t\t\t\t_getReplyDetails(details, markup);\n\n\t\t\t\t\t\t\treturn resolve(details);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\t// execute!\n\t\treturn core.Validation.promiseOrCallback(exec, callback);\n\t}\n\n\tlist (options, callback) {\n\t\t/* eslint no-undefined : 0 */\n\t\treturn this.search(options, undefined, callback);\n\t}\n\n\tsearch (options, query, callback) {\n\t\tif (typeof query === 'function' && core.Validation.isEmpty(callback)) {\n\t\t\tcallback = query;\n\t\t\tquery = typeof options === 'string' ? options : query;\n\t\t\toptions = typeof options === 'string' ? {} : options;\n\t\t}\n\n\t\tif (core.Validation.isEmpty(query) && typeof options === 'string') {\n\t\t\tquery = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\tif (typeof options === 'function') {\n\t\t\tcallback = options;\n\t\t\toptions = {};\n\t\t\t/* eslint no-undefined : 0 */\n\t\t\tquery = undefined;\n\t\t}\n\n\t\t// ensure options is at least a blank object before continuing\n\t\toptions = options || {};\n\n\t\tlet\n\t\t\texec,\n\t\t\tself = this;\n\n\t\t// create a Promise to execute the request\n\t\texec = new Promise((resolve, reject) => {\n\t\t\t// remap options for the request\n\t\t\tlet requestOptions = _getRequestOptions(this, options, query);\n\n\t\t\tdebug('request options set to: %o', requestOptions);\n\n\t\t\tif (core.Validation.isEmpty(requestOptions.hostname)) {\n\t\t\t\treturn reject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t'unable to set hostname (check to see if city is specified)'));\n\t\t\t}\n\n\t\t\treturn self.request\n\t\t\t\t.get(requestOptions)\n\t\t\t\t.then((markup) => {\n\t\t\t\t\tlet postings = _getPostings(requestOptions, markup);\n\t\t\t\t\tdebug('found %d postings', postings.length);\n\n\t\t\t\t\treturn resolve(postings);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\t// execute!\n\t\treturn core.Validation.promiseOrCallback(exec, callback);\n\t}\n}\n\nexport default { Client };\n"],"file":"index.js"}