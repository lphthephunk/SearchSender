{"version":3,"sources":["../../../server/external/craigslist/getCities.js"],"names":["result","$","cheerio","load","cities","find","map","i","li","cityName","text","refSplit","attr","split","ref","replace","push","sort","a","b","toLowerCase"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;wBAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEU,6BAAQ,mCAAR,CAFV;;AAAA;AAELA,UAAAA,MAFK;;AAAA,eAGPA,MAHO;AAAA;AAAA;AAAA;;AAIHC,UAAAA,CAJG,GAICC,iBAAQC,IAAR,CAAaH,MAAb,CAJD;AAKLI,UAAAA,MALK,GAKI,EALJ;AAOTH,UAAAA,CAAC,CAAC,gBAAD,CAAD,CACGI,IADH,CACQ,IADR,EAEGC,GAFH,CAEO,UAASC,CAAT,EAAYC,EAAZ,EAAgB;AACnB,gBAAMC,QAAQ,GAAGR,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,EAAjB;AACA,gBAAMC,QAAQ,GAAGV,CAAC,CAAC,IAAD,CAAD,CACdI,IADc,CACT,GADS,EAEdO,IAFc,CAET,MAFS,EAGdC,KAHc,CAGR,GAHQ,CAAjB,CAFmB,CAMnB;AACA;;AACA,gBAAMC,GAAG,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYI,OAAZ,CAAoB,UAApB,EAAgC,EAAhC,CAAZ;AACAX,YAAAA,MAAM,CAACY,IAAP,CAAY;AAAEP,cAAAA,QAAQ,EAARA,QAAF;AAAYK,cAAAA,GAAG,EAAHA;AAAZ,aAAZ;AACD,WAZH;AAcAV,UAAAA,MAAM,GAAGA,MAAM,CAACa,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7B,gBAAID,CAAC,CAACT,QAAF,CAAWW,WAAX,KAA2BD,CAAC,CAACV,QAAF,CAAWW,WAAX,EAA/B,EAAyD;AACvD,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAIF,CAAC,CAACT,QAAF,CAAWW,WAAX,KAA2BD,CAAC,CAACV,QAAF,CAAWW,WAAX,EAA/B,EAAyD;AACvD,qBAAO,CAAP;AACD;;AACD,mBAAO,CAAP;AACD,WARQ,CAAT;AArBS,2CA+BFhB,MA/BE;;AAAA;AAAA,gBAiCH,iBAjCG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","sourcesContent":["import cheerio from \"cheerio\";\nimport request from \"request-promise\";\n\nexport default async () => {\n  try {\n    const result = await request(\"https://geo.craigslist.org/iso/us\");\n    if (result) {\n      const $ = cheerio.load(result);\n      let cities = [];\n\n      $(\".geo-site-list\")\n        .find(\"li\")\n        .map(function(i, li) {\n          const cityName = $(this).text();\n          const refSplit = $(this)\n            .find(\"a\")\n            .attr(\"href\")\n            .split(\".\");\n          // we want the info in between http:// and .craigslist\n          // this should be at the 0th index\n          const ref = refSplit[0].replace(\"https://\", \"\");\n          cities.push({ cityName, ref });\n        });\n\n      cities = cities.sort((a, b) => {\n        if (a.cityName.toLowerCase() < b.cityName.toLowerCase()) {\n          return -1;\n        }\n        if (a.cityName.toLowerCase() > b.cityName.toLowerCase()) {\n          return 1;\n        }\n        return 0;\n      });\n\n      return cities;\n    } else {\n      throw \"No cities found\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n"],"file":"getCities.js"}